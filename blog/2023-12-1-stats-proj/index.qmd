---
  title: "Can Economic Freedom Improve Environmental Outcomes?"
  description: "EDS222 Final Project"
  author:
    - name: Maxwell Patterson
    - affiliation: Master of Environmental Data Science Program
    - affiliation-url: https://ucsb-meds.github.io/
  date: 12-15-2023
  categories: [R, MEDS, Stats]
  bibliography: references.bib
---

## Introduction
- Markets are meant to be efficient and allocate resources effectively
- Capitalism is inherently inefficient due to the negative externality of environmental impact not being considered in pricing of goods and services
- 

### What is *economic freedom*?

### Environmental Outcomes Analyzed

### Predictions



## Data and Methodology

TALK ABOUT DATA HERE

First, let's import the libraries we will need to conduct this analysis.

```{r, message=FALSE}
# import libraries
library(here)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(janitor)
library(tidyr)
library(MASS)
library(randomForest)
library(tidyverse)

# clear environment for sanity
rm(list = ls())
```

### Data Cleaning

Now, let's import and clean the data containing the freedom index and other scores by country.

```{r}
# read in freedom data
freedom_raw <- read.csv('data/efw_ratings.csv', header = FALSE)
```

This data needs a good bit of clean up.

```{r, message=FALSE, warning=FALSE, echo=FALSE}
# set the 5th row as the column names
colnames(freedom_raw) <- freedom_raw[5,]

# remove the first 4 rows since they are now empty and clean names, remove na column
freedom <- freedom_raw[-c(1:5), ] %>% 
  clean_names() %>% 
  subset(select = -na) %>% 
  subset(select = c(-na_2, -na_3, -na_4, -na_5)) %>% 
  subset(select = -world_bank_region) %>% 
  subset(select = -world_bank_current_income_classification_1990_present)

# convert appropriate columns from char to num
freedom <- freedom %>%
  mutate(across(6:ncol(freedom), as.numeric)) %>% 
  mutate(economic_freedom_summary_index = as.numeric(as.character(economic_freedom_summary_index)))

```


Now, lets move on to reading in the next dataset. The *freedom* data serves as the policy side of the data -- now we want to append and compare environmental outcomes based on different political and economic factors.

```{r}
# read in esg data
esg_wb <- read.csv('data/esg_wb.csv') %>% 
  clean_names()
```

This data also needs to be cleaned up a bit. Let's get to work.

```{r, warning=FALSE}
column_names <- c("x1998_yr1998", "x1999_yr1999", "x2000_yr2000", 
                  "x2001_yr2001", "x2002_yr2002", "x2003_yr2003", 
                  "x2004_yr2004", "x2005_yr2005", "x2006_yr2006", 
                  "x2007_yr2007", "x2008_yr2008", "x2009_yr2009", 
                  "x2010_yr2010", "x2011_yr2011", "x2012_yr2012", 
                  "x2013_yr2013", "x2014_yr2014", "x2015_yr2015", 
                  "x2016_yr2016", "x2017_yr2017", "x2018_yr2018", 
                  "x2019_yr2019", "x2020_yr2020", "x2021_yr2021", 
                  "x2022_yr2022")

# Function to extract and convert the year part of a column name to numeric
extract_year <- function(column_name) {
  year_str <- substr(column_name, 2, 5)
  as.numeric(year_str)
}

first <- names(esg_wb)[1:4]

# Apply the function to each column name
numeric_years <- sapply(column_names, extract_year)

new_cols <- c(first, numeric_years)

names(esg_wb) <- new_cols

esg_wb <- esg_wb %>% 
  mutate(across(5:ncol(.), ~ as.numeric(as.character(.))))
```

```{r}
# make longer so it is compatible to join with freedom data
esg_wb_long <- esg_wb %>%
  pivot_longer(
    cols = '1998':'2022', # Specify the range of columns to pivot
    names_to = "Year", # Name of the new column that will store the years
    values_to = "Value" # Name of the new column that will store the corresponding values
  ) 

# View the pivoted data
head(esg_wb_long)
```

```{r}
# rename the country column in freedom dataset to match esg_wb_long
names(freedom)[names(freedom) == "countries"] <- "country_name"

# rename the year column in freedom dataset to match esg_wb_long
names(freedom)[names(freedom) == "year"] <- "Year"

# perform the join
freedom_esg <- merge(freedom, esg_wb_long, by = c("Year", "country_name"))

# save dataset as a csv
write.csv(freedom_esg, "freedom_esg.csv", row.names = FALSE)
```

```{r}
# filtering for each series name 
water_stress <- freedom_esg %>% 
  filter(series_name == "Level of water stress: freshwater withdrawal as a proportion of available freshwater resources")

ag_area <- freedom_esg %>% 
  filter(series_name == "Agricultural land (% of land area)")

forest_depletion <- freedom_esg %>% 
  filter(series_name == "Adjusted savings: net forest depletion (% of GNI)")

coastal_protection <- freedom_esg %>% 
  filter(series_name == "Coastal protection")

renewable_output <- freedom_esg %>% 
  filter(series_name == "Renewable electricity output (% of total electricity output)")

renewable_consumption <- freedom_esg %>% 
  filter(series_name == "Renewable energy consumption (% of total final energy consumption)")

methane_emissions <- freedom_esg %>% 
  filter(series_name == "Methane emissions (metric tons of CO2 equivalent per capita)")
```

```{r}
cor.test(methane_emissions_selected$Value, methane_emissions_selected$economic_freedom_summary_index)
```


```{r}
# Filter the dataset for US and the years 2000-2020
methane_emissions_us <- methane_emissions %>% 
  filter(country_name == "United States", Year >= 2000, Year <= 2020)

deforestation_brazil <- forest_depletion %>% 
  filter(Year >= 2000, Year <= 2020) %>% 
  group_by(country_name) %>% 
  summarize(mean_deforestation = mean(Value, na.rm = TRUE),
            mean_freedom = mean(economic_freedom_summary_index, na.rm = TRUE))


```

```{r}
methane_lm <- lm(Value ~ x5d_freedom_to_enter_markets_and_compete, data = freedom_esg)

summary(methane_lm)
```


```{r}
methane_emissions %>% 
  group_by(Year, quartile) %>% 
  summarize(avg_methane = mean(Value, na.rm = TRUE))
```

```{r}
methane_col_of_interest <- freedom_esg %>% 
  dplyr::select(Year, quartile, country_name, economic_freedom_summary_index, data, data_3, data_6, x5d_freedom_to_enter_markets_and_compete, series_name, Value) %>% 
  filter(series_name == "Methane emissions (metric tons of CO2 equivalent per capita)")
```


Historical events to consider:

-   2008 financial crisis

-   2016 paris agreement


Hypothesis testing: 


Some analysis to consider:

-   Comparative analysis of economic freedom scores

-   Correlation analysis

-   Regression analysis

-   Time series analysis

-   Cluster analysis

-   Hypothesis testing

-   Random forest analysis

-   Interaction effect

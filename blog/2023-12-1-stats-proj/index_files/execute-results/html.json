{
  "hash": "029832803897053d264ef11f216345bf",
  "result": {
    "markdown": "---\n  title: \"Can Economic Freedom Improve Environmental Outcomes?\"\n  description: \"EDS222 Final Project\"\n  author:\n    - name: Maxwell Patterson\n    - affiliation: Master of Environmental Data Science Program\n    - affiliation-url: https://ucsb-meds.github.io/\n  date: 12-15-2023\n  categories: [R, MEDS, Stats]\n  bibliography: references.bib\n---\n\n\n### What is *economic freedom*?\n\nI'll be investigating economic freedom. The United States, China, Russia, and the EU will be the primary analysis of the project.\n\nFirst, let's import the libraries we will need to conduct this analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# import libraries\nlibrary(here)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(tidyr)\nlibrary(MASS)\nlibrary(randomForest)\nlibrary(tidyverse)\n\n# clear environment for sanity\nrm(list = ls())\n```\n:::\n\n\n#### Data Cleaning\n\nNow, let's import and clean the data containing the freedom index and other scores by country.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in freedom data\nfreedom_raw <- read.csv('data/efw_ratings.csv', header = FALSE)\n```\n:::\n\n\nThis data needs a good bit of clean up.\n\n\n::: {.cell}\n\n:::\n\n\nFiltering for a few countries I want to analyze will make analysis more convenient.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfreedom_us_china_russia <- freedom %>% \n  filter(countries %in% c('United States', 'China', 'Russian Federation'))\n\nfreedom_capitalism <- freedom %>% \n  filter(countries %in% c('United States', 'Singapore', 'Hong Kong SAR, China', 'Switzerland', 'New Zealand', 'Australia', 'United Kingdom', 'Ireland', 'Netherlands'))\n\nfreedom_anticapitalism <- freedom %>% \n  filter(countries %in% c('Sweden', 'Norway', 'Finland', 'Denmark', 'France', 'Belgium', 'Austria', 'Germany', 'Italy'))\n```\n:::\n\n\nThis analysis will focus on 2020, as this is the most complete recent year in the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfreedom_2020 <- freedom %>% \n  filter(year == 2020)\n```\n:::\n\n\nNow, lets move on to entering the next dataset. This *freedom* data serves as the policy side of the data -- now we want to append and compare environmental outcomes based on different political and economic factors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in esg data\nesg_wb <- read.csv('data/esg_wb.csv') %>% \n  clean_names()\n```\n:::\n\n\nThis data also needs to be cleaned up a bit. Let's get to work.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolumn_names <- c(\"x1998_yr1998\", \"x1999_yr1999\", \"x2000_yr2000\", \n                  \"x2001_yr2001\", \"x2002_yr2002\", \"x2003_yr2003\", \n                  \"x2004_yr2004\", \"x2005_yr2005\", \"x2006_yr2006\", \n                  \"x2007_yr2007\", \"x2008_yr2008\", \"x2009_yr2009\", \n                  \"x2010_yr2010\", \"x2011_yr2011\", \"x2012_yr2012\", \n                  \"x2013_yr2013\", \"x2014_yr2014\", \"x2015_yr2015\", \n                  \"x2016_yr2016\", \"x2017_yr2017\", \"x2018_yr2018\", \n                  \"x2019_yr2019\", \"x2020_yr2020\", \"x2021_yr2021\", \n                  \"x2022_yr2022\")\n\n# Function to extract and convert the year part of a column name to numeric\nextract_year <- function(column_name) {\n  year_str <- substr(column_name, 2, 5)\n  as.numeric(year_str)\n}\n\nfirst <- names(esg_wb)[1:4]\n\n# Apply the function to each column name\nnumeric_years <- sapply(column_names, extract_year)\n\nnew_cols <- c(first, numeric_years)\n\nnames(esg_wb) <- new_cols\n\nesg_wb <- esg_wb %>% \n  mutate(across(5:ncol(.), ~ as.numeric(as.character(.))))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nesg_wb_long <- esg_wb %>%\n  pivot_longer(\n    cols = '1998':'2022', # Specify the range of columns to pivot\n    names_to = \"Year\", # Name of the new column that will store the years\n    values_to = \"Value\" # Name of the new column that will store the corresponding values\n  )\n\n# View the pivoted data\nhead(esg_wb_long)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  country_name country_code series_name                  series_code Year  Value\n  <chr>        <chr>        <chr>                        <chr>       <chr> <dbl>\n1 Afghanistan  AFG          Agricultural land (% of lan… AG.LND.AGR… 1998   58.1\n2 Afghanistan  AFG          Agricultural land (% of lan… AG.LND.AGR… 1999   57.9\n3 Afghanistan  AFG          Agricultural land (% of lan… AG.LND.AGR… 2000   57.9\n4 Afghanistan  AFG          Agricultural land (% of lan… AG.LND.AGR… 2001   57.9\n5 Afghanistan  AFG          Agricultural land (% of lan… AG.LND.AGR… 2002   57.9\n6 Afghanistan  AFG          Agricultural land (% of lan… AG.LND.AGR… 2003   58.1\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nenergy <- esg_wb %>% \n  filter(series_name == \"Renewable energy consumption (% of total final energy consumption)\")\n\nenergy_long <- energy %>%\n  pivot_longer(\n    cols = `1998`:`2022`, # Specify the range of year columns as integers\n    names_to = \"Year\", # Name of the new column for years\n    values_to = \"RenewableEnergyConsumption\" # Name of the new column for values\n  )\n\nwater <- esg_wb %>% \n  filter(series_name == \"Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\")\n\nwater_long <- water %>%\n  pivot_longer(\n    cols = `1998`:`2022`, # Specify the range of year columns as integers\n    names_to = \"Year\", # Name of the new column for years\n    values_to = \"Water\" # Name of the new column for values\n  )\n\nmethane <- esg_wb %>% \n  filter(series_name == \"Methane emissions (metric tons of CO2 equivalent per capita)\")\n\nmethane_long <- methane %>%\n  pivot_longer(\n    cols = `1998`:`2022`, # Specify the range of year columns as integers\n    names_to = \"Year\", # Name of the new column for years\n    values_to = \"Methane\" # Name of the new column for values\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(energy_long, country_name %in% c(\"High income\", \"Low income\")), aes(x = Year, y = RenewableEnergyConsumption, color = country_name)) +\n  geom_point() +\n  labs(title = \"Renewable Energy Consumption Trend for High and Low Income Countries\", x = \"Year\", y = \"Renewable Energy Consumption (%)\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(methane_long, country_name %in% c(\"High income\", \"Low income\")), aes(x = Year, y = Methane, color = country_name)) +\n  geom_point() +\n  labs(title = \"Water\", x = \"Year\", y = \"Water\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 4 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nOcean protection\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# filtering for each series name in esg data\nagricultural_land_subset <- filter(esg_wb, series_name == \"Agricultural land (% of land area)\")\n\nnet_forest_depletion_subset <- filter(esg_wb, series_name == \"Adjusted savings: net forest depletion (% of GNI)\")\n\ncoastal_protection_subset <- filter(esg_wb, series_name == \"Coastal protection\")\n\nwater_stress_level_subset <- filter(esg_wb, series_name == \"Level of water stress: freshwater withdrawal as a proportion of available freshwater resources\")\n\nmethane_emissions_subset <- filter(esg_wb, series_name == \"Methane emissions (metric tons of CO2 equivalent per capita)\")\n\nrenewable_energy_consumption_subset <- filter(esg_wb, series_name == \"Renewable energy consumption (% of total final energy consumption)\")\n\nrenewable_electricity_output_subset <- filter(esg_wb, series_name == \"Renewable electricity output (% of total electricity output)\")\n\nunemployment_total_subset <- filter(esg_wb, series_name == \"Unemployment, total (% of total labor force) (modeled ILO estimate)\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(subset(freedom, countries %in% c(\"United States\", \"China\", \"United Kingdom\", \"France\", \"South Africa\", \"Iraq\", \"Serbia\")), \n       aes(x = year, y = economic_freedom_summary_index, color = countries)) +\n    geom_point() +\n    labs(title = \"Economic Freedom Index Over Time\", x = \"Year\", y = \"Economic Freedom Index\") +\n    theme_minimal() +\n  theme(axis.text.x = element_text(angle=45, hjust = 1))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 30 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nHypothesis testing:\n\n\n::: {.cell}\n\n```{.r .cell-code}\neu_countries <- c(\"Austria\", \"Belgium\", \"Bulgaria\", \"Croatia\", \"Cyprus\", \n                  \"Czech Republic\", \"Denmark\", \"Estonia\", \"Finland\", \"France\", \n                  \"Germany\", \"Greece\", \"Hungary\", \"Ireland\", \"Italy\", \"Latvia\", \n                  \"Lithuania\", \"Luxembourg\", \"Malta\", \"Netherlands\", \"Poland\", \n                  \"Portugal\", \"Romania\", \"Slovakia\", \"Slovenia\", \"Spain\", \"Sweden\")\n\nfreedom_eu <- freedom %>% \n  filter(countries %in% eu_countries) %>% \n  filter(year == 2020)\n\nfreedom_wo_eu <- freedom %>% \n  filter(!(countries %in% eu_countries)) %>% \n  filter(year == 2020)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Perform T-test\nt_test_result <- t.test(freedom_eu$economic_freedom_summary_index, \n                        freedom_wo_eu$economic_freedom_summary_index,\n                        na.rm = TRUE)\n\n# Print the results\nt_test_result\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tWelch Two Sample t-test\n\ndata:  freedom_eu$economic_freedom_summary_index and freedom_wo_eu$economic_freedom_summary_index\nt = 10.049, df = 110.52, p-value < 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 0.8648778 1.2897794\nsample estimates:\nmean of x mean of y \n 7.566400  6.489071 \n```\n:::\n:::\n\n\nSome analysis to consider:\n\n-   Comparative analysis of economic freedom scores\n\n-   Correlation analysis\n\n-   Regression analysis\n\n-   Time series analysis\n\n-   Cluster analysis\n\n-   Hypothesis testing\n\n-   Random forest analysis\n\n-   Interaction effect\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}